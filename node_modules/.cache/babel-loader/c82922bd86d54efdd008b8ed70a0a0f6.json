{"ast":null,"code":"var _jsxFileName = \"/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/CartData.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar CartData = function CartData(props) {\n  var _useState = useState(props.data),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(props.total),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  handleClick = function handleClick(e) {\n    var id = e.target.value;\n    fetch(\"carts/delete/\".concat(data[0].cart_id));\n    setData([]);\n    setTotal('');\n  }; // console.log(data);\n\n\n  var allData = data.map(function (data, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"nav-text-ins text-nowrap\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, data.quantity, \" x \"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"nav-text-ins text-left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, data.product.title), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"nav-text-ins\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, \"$\", data.product.price * data.quantity));\n  });\n  var noData = /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"nav-text-ins\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Empty Cart\")));\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"nav-cart\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, data.length > 0 ? allData : noData, /*#__PURE__*/React.createElement(\"tr\", {\n    className: \"total_line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"nav-text-ins text-right r-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Total \"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"nav-text-ins\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"$\", total)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: _this.handleClick,\n    value: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Empty Cart\")))));\n}; //\n// export class CartData extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: [],\n//       total: '',\n//       len: 0\n//     };\n//     this.handleClick = this.handleClick.bind(this);\n//   }\n//\n//   componentDidUpdate(prevProps){\n//     if(prevProps.change !== this.props.change){\n//       this.setState({ len: this.props.change});\n//       this.setState({ data: this.props.data })\n//       this.setState({ total: this.props.total })\n//     }\n//   }\n//\n//   componentDidMount() {\n//     this.setState({ data: this.props.data })\n//     this.setState({ total: this.props.total })\n//   };\n//\n//   handleClick = (e) => {\n//     const id = e.target.value;\n//     fetch(`carts/delete/${this.state.data[0].cart_id}`);\n//     this.setState({ data: [] });\n//     this.setState({ total: \"\" });\n//     this.props.varChange(0);\n//   }\n//\n//   render() {\n//     const { data } = this.state;\n//\n//     // console.log(data);\n//     const allData = data.map((data, index) => (\n//       <tr key={ index }>\n//         <td className=\"nav-text-ins text-nowrap\">{data.quantity} x </td>\n//         <td className=\"nav-text-ins text-left\">{data.product.title}</td>\n//         <td className=\"nav-text-ins\">${data.product.price * data.quantity}</td>\n//       </tr>\n//     ));\n//\n//     const noData = (\n//       <tr className=\"nav-text-ins\">\n//         <td>\n//           <h4>\n//             Empty Cart\n//           </h4>\n//         </td>\n//       </tr>\n//     );\n//\n//     const { total } = this.state;\n//     return (\n//\n//         <table className=\"nav-cart\">\n//           <tbody>\n//             {data.length > 0 ? allData : noData }\n//             <tr className=\"total_line\">\n//               <td></td>\n//               <td className=\"nav-text-ins text-right r-5\">Total </td>\n//               <td className=\"nav-text-ins\">${ total }</td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">\n//                 <button className=\"btn btn-primary\" onClick={this.handleClick}\n//                 value={ data }>\n//                   Empty Cart\n//                 </button>\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//\n//     );\n//   }\n//\n// }","map":{"version":3,"sources":["/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/CartData.jsx"],"names":["React","useState","Link","CartData","props","data","setData","total","setTotal","handleClick","e","id","target","value","fetch","cart_id","allData","map","index","quantity","product","title","price","noData","length"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CartData = (props) => {\n  const [data, setData] = useState(props.data);\n  const [total, setTotal] = useState(props.total);\n\n  handleClick = (e) => {\n    const id = e.target.value;\n    fetch(`carts/delete/${data[0].cart_id}`);\n    setData([]);\n    setTotal('');\n  }\n\n  // console.log(data);\n  const allData = data.map((data, index) => (\n    <tr key={ index }>\n      <td className=\"nav-text-ins text-nowrap\">{data.quantity} x </td>\n      <td className=\"nav-text-ins text-left\">{data.product.title}</td>\n      <td className=\"nav-text-ins\">${data.product.price * data.quantity}</td>\n    </tr>\n  ));\n\n  const noData = (\n    <tr className=\"nav-text-ins\">\n      <td>\n        <h4>\n          Empty Cart\n        </h4>\n      </td>\n    </tr>\n  );\n\n  return (\n      <table className=\"nav-cart\">\n        <tbody>\n          {data.length > 0 ? allData : noData }\n          <tr className=\"total_line\">\n            <td></td>\n            <td className=\"nav-text-ins text-right r-5\">Total </td>\n            <td className=\"nav-text-ins\">${ total }</td>\n          </tr>\n          <tr>\n            <td colSpan=\"2\">\n              <button className=\"btn btn-primary\" onClick={this.handleClick}\n              value={ data }>\n                Empty Cart\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n  );\n}\n//\n// export class CartData extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       data: [],\n//       total: '',\n//       len: 0\n//     };\n//     this.handleClick = this.handleClick.bind(this);\n//   }\n//\n//   componentDidUpdate(prevProps){\n//     if(prevProps.change !== this.props.change){\n//       this.setState({ len: this.props.change});\n//       this.setState({ data: this.props.data })\n//       this.setState({ total: this.props.total })\n//     }\n//   }\n//\n//   componentDidMount() {\n//     this.setState({ data: this.props.data })\n//     this.setState({ total: this.props.total })\n//   };\n//\n//   handleClick = (e) => {\n//     const id = e.target.value;\n//     fetch(`carts/delete/${this.state.data[0].cart_id}`);\n//     this.setState({ data: [] });\n//     this.setState({ total: \"\" });\n//     this.props.varChange(0);\n//   }\n//\n//   render() {\n//     const { data } = this.state;\n//\n//     // console.log(data);\n//     const allData = data.map((data, index) => (\n//       <tr key={ index }>\n//         <td className=\"nav-text-ins text-nowrap\">{data.quantity} x </td>\n//         <td className=\"nav-text-ins text-left\">{data.product.title}</td>\n//         <td className=\"nav-text-ins\">${data.product.price * data.quantity}</td>\n//       </tr>\n//     ));\n//\n//     const noData = (\n//       <tr className=\"nav-text-ins\">\n//         <td>\n//           <h4>\n//             Empty Cart\n//           </h4>\n//         </td>\n//       </tr>\n//     );\n//\n//     const { total } = this.state;\n//     return (\n//\n//         <table className=\"nav-cart\">\n//           <tbody>\n//             {data.length > 0 ? allData : noData }\n//             <tr className=\"total_line\">\n//               <td></td>\n//               <td className=\"nav-text-ins text-right r-5\">Total </td>\n//               <td className=\"nav-text-ins\">${ total }</td>\n//             </tr>\n//             <tr>\n//               <td colSpan=\"2\">\n//                 <button className=\"btn btn-primary\" onClick={this.handleClick}\n//                 value={ data }>\n//                   Empty Cart\n//                 </button>\n//               </td>\n//             </tr>\n//           </tbody>\n//         </table>\n//\n//     );\n//   }\n//\n// }\n"]},"metadata":{},"sourceType":"module"}