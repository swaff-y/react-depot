{"ast":null,"code":"var _jsxFileName = \"/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/App.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Navbar from \"./Navbar\";\nimport CartData from \"./CartData\";\n\nvar App = function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      change = _useState2[0],\n      setChange = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      total = _useState6[0],\n      setTotal = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    var url = \"/carts/last\";\n    fetch(url).then(function (res) {\n      (function (res) {\n        return res.json();\n      });\n    }).then(function (data) {\n      setData(data);\n      console.log('data: ', data);\n    });\n  });\n  useEffect(function () {\n    var url = \"/carts/last/total\";\n    fetch(url).then(function (res) {\n      if (res.ok) {\n        res.json();\n        console.log('Success');\n      } else {\n        console.log('Not Success');\n      }\n    }).then(function (data) {\n      setTotal(data);\n      console.log(data);\n    });\n  });\n\n  function handleChange() {\n    setChange(function (prevChange) {\n      change + 1;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    change: change,\n    data: data,\n    total: total,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/products\",\n    render: function render(props) {\n      return /*#__PURE__*/React.createElement(Products, Object.assign({}, props, {\n        change: handleChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 51\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}; // class App extends React.Component {\n//   state = {\n//     change: 0,\n//     data: [],\n//     total: '',\n//     loading: true\n//   };\n//\n//   handleChange = ( count ) => {\n//     this.setState({ loading: true })\n//     let change = this.state.change++;\n//     this.setState({ change: count })\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     fetch(url)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ data: data, loading: false }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//     fetch(urlTwo)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ total: data }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//   };\n//\n//   varChange = ( count ) => {\n//     // this.setState({ change: count })\n//   }\n//   // async changeFunc(){\n//   //   const url = \"/carts/last\";\n//   //   const urlTwo = \"/carts/last/total\";\n//   //   const response = await fetch(url);\n//   //   const data = await response.json();\n//   //   this.setState({ data: data })\n//   //   const responseTwo = await fetch(urlTwo);\n//   //   const dataTwo = await responseTwo.json();\n//   //   this.setState({ total: dataTwo, loading: false })\n//   // }\n//\n//   // componentDidUpdate(prevProps){\n//   //   if(prevProps.change !== this.props.change){\n//   //     this.setState({ len: this.props.change});\n//   //     const url = \"/carts/last\";\n//   //     const urlTwo = \"/carts/last/total\";\n//   //     fetch(url)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ data: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //     fetch(urlTwo)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ total: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //   }\n//   // }\n//\n//   async componentDidMount(){\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     this.setState({ data: data })\n//     const responseTwo = await fetch(urlTwo);\n//     const dataTwo = await responseTwo.json();\n//     this.setState({ total: dataTwo, loading: false, change: data.length })\n//   };\n//\n//   render(){\n//     console.log(\"app data\",this.state.data);\n//     return(\n//       <Router>\n//         {this.state.loading ? (<div>Loading...</div>) : (<Navbar change={this.state.change} data={this.state.data} total={this.state.total} varChange={this.varChange}/>)}\n//\n//         <Switch>\n//           <Route path=\"/\" exact component={Home} />\n//           <Route path=\"/products\" render={(props)=>(<Products {...props} change={this.handleChange} />)} />\n//         </Switch>\n//       </Router>\n//     )\n//   }\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/App.jsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Home","Products","Navbar","CartData","App","change","setChange","data","setData","total","setTotal","loading","setLoading","url","fetch","then","res","json","console","log","ok","handleChange","prevChange","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Navbar from \"./Navbar\";\nimport CartData from \"./CartData\";\n\nconst App = () => {\n  const [change, setChange] = useState(0);\n  const [data, setData] = useState([]);\n  const [total, setTotal] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect( () => {\n    const url = \"/carts/last\";\n    fetch(url)\n    .then(res => {\n      res => res.json()\n    })\n    .then(data => {\n      setData(data)\n      console.log('data: ',data);\n    })\n  })\n  useEffect( () => {\n    const url = \"/carts/last/total\";\n    fetch(url)\n    .then(res => {\n      if(res.ok){\n        res.json()\n        console.log('Success');\n      }else{\n        console.log('Not Success');\n      }\n    })\n    .then(data =>{\n      setTotal(data)\n      console.log(data);\n    })\n  })\n\n  function handleChange(){\n    setChange(prevChange =>{\n      change + 1\n    });\n  }\n\n  return(\n    <Router>\n      <Navbar change={change} data={data} total={total} />\n\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/products\" render={(props)=>(<Products {...props} change={handleChange} />)} />\n      </Switch>\n    </Router>\n  )\n}\n\n// class App extends React.Component {\n//   state = {\n//     change: 0,\n//     data: [],\n//     total: '',\n//     loading: true\n//   };\n//\n//   handleChange = ( count ) => {\n//     this.setState({ loading: true })\n//     let change = this.state.change++;\n//     this.setState({ change: count })\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     fetch(url)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ data: data, loading: false }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//     fetch(urlTwo)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ total: data }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//   };\n//\n//   varChange = ( count ) => {\n//     // this.setState({ change: count })\n//   }\n//   // async changeFunc(){\n//   //   const url = \"/carts/last\";\n//   //   const urlTwo = \"/carts/last/total\";\n//   //   const response = await fetch(url);\n//   //   const data = await response.json();\n//   //   this.setState({ data: data })\n//   //   const responseTwo = await fetch(urlTwo);\n//   //   const dataTwo = await responseTwo.json();\n//   //   this.setState({ total: dataTwo, loading: false })\n//   // }\n//\n//   // componentDidUpdate(prevProps){\n//   //   if(prevProps.change !== this.props.change){\n//   //     this.setState({ len: this.props.change});\n//   //     const url = \"/carts/last\";\n//   //     const urlTwo = \"/carts/last/total\";\n//   //     fetch(url)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ data: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //     fetch(urlTwo)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ total: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //   }\n//   // }\n//\n//   async componentDidMount(){\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     this.setState({ data: data })\n//     const responseTwo = await fetch(urlTwo);\n//     const dataTwo = await responseTwo.json();\n//     this.setState({ total: dataTwo, loading: false, change: data.length })\n//   };\n//\n//   render(){\n//     console.log(\"app data\",this.state.data);\n//     return(\n//       <Router>\n//         {this.state.loading ? (<div>Loading...</div>) : (<Navbar change={this.state.change} data={this.state.data} total={this.state.total} varChange={this.varChange}/>)}\n//\n//         <Switch>\n//           <Route path=\"/\" exact component={Home} />\n//           <Route path=\"/products\" render={(props)=>(<Products {...props} change={this.handleChange} />)} />\n//         </Switch>\n//       </Router>\n//     )\n//   }\n// }\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}