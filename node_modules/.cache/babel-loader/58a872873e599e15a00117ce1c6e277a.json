{"ast":null,"code":"var _jsxFileName = \"/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/App.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Navbar from \"./Navbar\";\nimport { DefaultData } from \"./DefaultData\";\n\nvar App = function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      change = _useState2[0],\n      setChange = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      smallCart = _useState4[0],\n      setSmallCart = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      totalCalc = _useState8[0],\n      setTotalCalc = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      products = _useState10[0],\n      setProducts = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loadingData = _useState12[0],\n      setLoadingData = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loadingTotal = _useState14[0],\n      setLoadingTotal = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      loadingProducts = _useState16[0],\n      setLoadingProducts = _useState16[1]; //fecth last cart\n\n\n  useEffect(function () {\n    var url = \"/carts/last\";\n    fetch(url).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      }\n\n      throw Error(res.statusText);\n      setData(DefaultData);\n    }).then(function (json) {\n      setData(JSON.stringify(json));\n      setLoadingData(false); //updateSmallCart();\n      // console.log(\"fetch data:\", \"data processed\");\n    });\n  }, [change]); //fecth totals\n\n  useEffect(function () {\n    var url = \"/carts/last/total\";\n    fetch(url).then(function (res) {\n      if (res.ok) {\n        return res.json();\n      } else {\n        setLoadingTotal(false);\n      }\n    }).then(function (json) {\n      setTotalCalc(json);\n      setLoadingTotal(false); // console.log(\"fetch total:\", \"total processed\");\n    });\n  }, [change]); //fetch products\n\n  useEffect(function () {\n    var url = \"/products\";\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setProducts(JSON.stringify(json));\n      setLoadingProducts(false); // console.log(\"products run\");\n    });\n  }, [products]);\n\n  function handleChange(id) {\n    console.log(\"change clicked\");\n    setChange(function (prevChange) {\n      return prevChange + 1;\n    });\n  } // console.log('app data', data);\n  // console.log('app total', totalCalc);\n  // console.log('app change', change);\n\n\n  var loading = true;\n\n  if (loadingTotal === false && loadingData === false) {\n    loading = false;\n  } // console.log(\"check:\", products);\n\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 18\n    }\n  }, \"Loading.....\") : /*#__PURE__*/React.createElement(Navbar, {\n    changeNav: change,\n    dataNav: data,\n    totalNav: totalCalc,\n    smallCartNav: smallCart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), loadingProducts ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Route, {\n    path: \"/products\",\n    render: function render(props) {\n      return /*#__PURE__*/React.createElement(Products, Object.assign({}, props, {\n        handleChange: handleChange,\n        productsApp: products,\n        loadingApp: loadingProducts,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 95\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 53\n    }\n  })));\n}; // class App extends React.Component {\n//   state = {\n//     change: 0,\n//     data: [],\n//     total: '',\n//     loading: true\n//   };\n//\n//   handleChange = ( count ) => {\n//     this.setState({ loading: true })\n//     let change = this.state.change++;\n//     this.setState({ change: count })\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     fetch(url)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ data: data, loading: false }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//     fetch(urlTwo)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ total: data }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//   };\n//\n//   varChange = ( count ) => {\n//     // this.setState({ change: count })\n//   }\n//   // async changeFunc(){\n//   //   const url = \"/carts/last\";\n//   //   const urlTwo = \"/carts/last/total\";\n//   //   const response = await fetch(url);\n//   //   const data = await response.json();\n//   //   this.setState({ data: data })\n//   //   const responseTwo = await fetch(urlTwo);\n//   //   const dataTwo = await responseTwo.json();\n//   //   this.setState({ total: dataTwo, loading: false })\n//   // }\n//\n//   // componentDidUpdate(prevProps){\n//   //   if(prevProps.change !== this.props.change){\n//   //     this.setState({ len: this.props.change});\n//   //     const url = \"/carts/last\";\n//   //     const urlTwo = \"/carts/last/total\";\n//   //     fetch(url)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ data: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //     fetch(urlTwo)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ total: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //   }\n//   // }\n//\n//   async componentDidMount(){\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     this.setState({ data: data })\n//     const responseTwo = await fetch(urlTwo);\n//     const dataTwo = await responseTwo.json();\n//     this.setState({ total: dataTwo, loading: false, change: data.length })\n//   };\n//\n//   render(){\n//     console.log(\"app data\",this.state.data);\n//     return(\n//       <Router>\n//         {this.state.loading ? (<div>Loading...</div>) : (<Navbar change={this.state.change} data={this.state.data} total={this.state.total} varChange={this.varChange}/>)}\n//\n//         <Switch>\n//           <Route path=\"/\" exact component={Home} />\n//           <Route path=\"/products\" render={(props)=>(<Products {...props} change={this.handleChange} />)} />\n//         </Switch>\n//       </Router>\n//     )\n//   }\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/App.jsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Home","Products","Navbar","DefaultData","App","change","setChange","smallCart","setSmallCart","data","setData","totalCalc","setTotalCalc","products","setProducts","loadingData","setLoadingData","loadingTotal","setLoadingTotal","loadingProducts","setLoadingProducts","url","fetch","then","res","ok","json","Error","statusText","JSON","stringify","handleChange","id","console","log","prevChange","loading","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Navbar from \"./Navbar\";\nimport { DefaultData } from \"./DefaultData\";\n\n\nconst App = () => {\n  const [change, setChange] = useState(0);\n  const [smallCart, setSmallCart] = useState(0);\n  const [data, setData] = useState([]);\n  const [totalCalc, setTotalCalc] = useState('');\n  const [products, setProducts] = useState([]);\n  const [loadingData, setLoadingData] = useState(true);\n  const [loadingTotal, setLoadingTotal] = useState(true);\n  const [loadingProducts, setLoadingProducts] = useState(true);\n\n//fecth last cart\n  useEffect( () => {\n    const url = \"/carts/last\";\n    fetch(url)\n    .then(res => {\n      if(res.ok){\n        return res.json()\n      }\n      throw Error(res.statusText);\n      setData(DefaultData);\n    })\n    .then(json => {\n      setData(JSON.stringify(json));\n      setLoadingData(false);\n      //updateSmallCart();\n      // console.log(\"fetch data:\", \"data processed\");\n    })\n  },[change])\n//fecth totals\n  useEffect( () => {\n    const url = \"/carts/last/total\";\n    fetch(url)\n    .then(res => {\n      if(res.ok){\n        return res.json()\n      }else{\n        setLoadingTotal(false);\n      }\n    })\n    .then(json => {\n      setTotalCalc(json);\n      setLoadingTotal(false);\n      // console.log(\"fetch total:\", \"total processed\");\n    })\n  },[change])\n//fetch products\n  useEffect(()=>{\n    const url = \"/products\";\n    fetch(url)\n      .then(res => {\n          return res.json();\n      })\n      .then(json => {\n        setProducts(JSON.stringify(json));\n        setLoadingProducts(false);\n        // console.log(\"products run\");\n      })\n  },[products])\n\n  function handleChange(id){\n    console.log(\"change clicked\");\n    setChange(prevChange =>{\n      return prevChange + 1;\n    });\n  }\n\n  // console.log('app data', data);\n  // console.log('app total', totalCalc);\n  // console.log('app change', change);\n  let loading = true;\n  if(loadingTotal === false && loadingData === false){\n    loading = false;\n  }\n\n  // console.log(\"check:\", products);\n  return(\n    <Router>\n      {loading ? <div>Loading.....</div> : <Navbar changeNav={change} dataNav={data} totalNav={totalCalc} smallCartNav={smallCart}/>}\n\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        {\n          loadingProducts ? <div>Loading...</div> : <Route path=\"/products\" render={(props)=>(<Products {...props} handleChange={handleChange} productsApp={products} loadingApp={loadingProducts}/>)} />\n        }\n      </Switch>\n    </Router>\n  )\n}\n\n// class App extends React.Component {\n//   state = {\n//     change: 0,\n//     data: [],\n//     total: '',\n//     loading: true\n//   };\n//\n//   handleChange = ( count ) => {\n//     this.setState({ loading: true })\n//     let change = this.state.change++;\n//     this.setState({ change: count })\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     fetch(url)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ data: data, loading: false }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//     fetch(urlTwo)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ total: data }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//   };\n//\n//   varChange = ( count ) => {\n//     // this.setState({ change: count })\n//   }\n//   // async changeFunc(){\n//   //   const url = \"/carts/last\";\n//   //   const urlTwo = \"/carts/last/total\";\n//   //   const response = await fetch(url);\n//   //   const data = await response.json();\n//   //   this.setState({ data: data })\n//   //   const responseTwo = await fetch(urlTwo);\n//   //   const dataTwo = await responseTwo.json();\n//   //   this.setState({ total: dataTwo, loading: false })\n//   // }\n//\n//   // componentDidUpdate(prevProps){\n//   //   if(prevProps.change !== this.props.change){\n//   //     this.setState({ len: this.props.change});\n//   //     const url = \"/carts/last\";\n//   //     const urlTwo = \"/carts/last/total\";\n//   //     fetch(url)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ data: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //     fetch(urlTwo)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ total: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //   }\n//   // }\n//\n//   async componentDidMount(){\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     this.setState({ data: data })\n//     const responseTwo = await fetch(urlTwo);\n//     const dataTwo = await responseTwo.json();\n//     this.setState({ total: dataTwo, loading: false, change: data.length })\n//   };\n//\n//   render(){\n//     console.log(\"app data\",this.state.data);\n//     return(\n//       <Router>\n//         {this.state.loading ? (<div>Loading...</div>) : (<Navbar change={this.state.change} data={this.state.data} total={this.state.total} varChange={this.varChange}/>)}\n//\n//         <Switch>\n//           <Route path=\"/\" exact component={Home} />\n//           <Route path=\"/products\" render={(props)=>(<Products {...props} change={this.handleChange} />)} />\n//         </Switch>\n//       </Router>\n//     )\n//   }\n// }\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}