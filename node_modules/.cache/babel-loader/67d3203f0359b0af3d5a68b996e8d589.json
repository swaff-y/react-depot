{"ast":null,"code":"var _jsxFileName = \"/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/App.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Navbar from \"./Navbar\";\n\nvar App = function App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      change = _useState2[0],\n      setChange = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      totalCalc = _useState6[0],\n      setTotalCalc = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loadingData = _useState8[0],\n      setLoadingData = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loadingTotal = _useState10[0],\n      setLoadingTotal = _useState10[1];\n\n  useEffect(function () {\n    var url = \"/carts/last\";\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setData(json);\n      setLoadingData(false);\n      console.log(\"fetch data:\", \"data processed\");\n    });\n  }, []);\n  useEffect(function () {\n    var url = \"/carts/last/total\";\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      setTotalCalc(json);\n      setLoadingTotal(false);\n      console.log(\"fetch total:\", \"total processed\");\n    });\n  }, []);\n\n  function handleChange() {\n    setChange(function (prevChange) {\n      change + 1;\n    });\n  } // console.log('app data', data);\n  // console.log('app total', totalCalc);\n  // console.log('app change', change);\n\n\n  var loading = true;\n\n  if (loadingTotal === false && loadingData === false) {\n    loading = false;\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }, \"Loading.....\") : /*#__PURE__*/React.createElement(Navbar, {\n    changeNav: change,\n    dataNav: data,\n    totalNav: totalCalc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 44\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: Home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/products\",\n    render: function render(props) {\n      return /*#__PURE__*/React.createElement(Products, Object.assign({}, props, {\n        change: handleChange,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 51\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}; // class App extends React.Component {\n//   state = {\n//     change: 0,\n//     data: [],\n//     total: '',\n//     loading: true\n//   };\n//\n//   handleChange = ( count ) => {\n//     this.setState({ loading: true })\n//     let change = this.state.change++;\n//     this.setState({ change: count })\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     fetch(url)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ data: data, loading: false }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//     fetch(urlTwo)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ total: data }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//   };\n//\n//   varChange = ( count ) => {\n//     // this.setState({ change: count })\n//   }\n//   // async changeFunc(){\n//   //   const url = \"/carts/last\";\n//   //   const urlTwo = \"/carts/last/total\";\n//   //   const response = await fetch(url);\n//   //   const data = await response.json();\n//   //   this.setState({ data: data })\n//   //   const responseTwo = await fetch(urlTwo);\n//   //   const dataTwo = await responseTwo.json();\n//   //   this.setState({ total: dataTwo, loading: false })\n//   // }\n//\n//   // componentDidUpdate(prevProps){\n//   //   if(prevProps.change !== this.props.change){\n//   //     this.setState({ len: this.props.change});\n//   //     const url = \"/carts/last\";\n//   //     const urlTwo = \"/carts/last/total\";\n//   //     fetch(url)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ data: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //     fetch(urlTwo)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ total: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //   }\n//   // }\n//\n//   async componentDidMount(){\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     this.setState({ data: data })\n//     const responseTwo = await fetch(urlTwo);\n//     const dataTwo = await responseTwo.json();\n//     this.setState({ total: dataTwo, loading: false, change: data.length })\n//   };\n//\n//   render(){\n//     console.log(\"app data\",this.state.data);\n//     return(\n//       <Router>\n//         {this.state.loading ? (<div>Loading...</div>) : (<Navbar change={this.state.change} data={this.state.data} total={this.state.total} varChange={this.varChange}/>)}\n//\n//         <Switch>\n//           <Route path=\"/\" exact component={Home} />\n//           <Route path=\"/products\" render={(props)=>(<Products {...props} change={this.handleChange} />)} />\n//         </Switch>\n//       </Router>\n//     )\n//   }\n// }\n\n\nexport default App;","map":{"version":3,"sources":["/Users/kyleswaffield/sei/projects/react-depot/app/javascript/components/App.jsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Home","Products","Navbar","App","change","setChange","data","setData","totalCalc","setTotalCalc","loadingData","setLoadingData","loadingTotal","setLoadingTotal","url","fetch","then","res","json","console","log","handleChange","prevChange","loading","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Products from \"./Products\";\nimport Navbar from \"./Navbar\";\n\n\nconst App = () => {\n  const [change, setChange] = useState(0);\n  const [data, setData] = useState([]);\n  const [totalCalc, setTotalCalc] = useState('');\n  const [loadingData, setLoadingData] = useState(true);\n  const [loadingTotal, setLoadingTotal] = useState(true);\n\n  useEffect( () => {\n    const url = \"/carts/last\";\n    fetch(url)\n    .then(res => {\n      return res.json()\n    })\n    .then(json => {\n      setData(json);\n      setLoadingData(false);\n      console.log(\"fetch data:\", \"data processed\");\n    })\n  },[])\n  useEffect( () => {\n    const url = \"/carts/last/total\";\n    fetch(url)\n    .then(res => {\n      return res.json()\n    })\n    .then(json => {\n      setTotalCalc(json);\n      setLoadingTotal(false);\n      console.log(\"fetch total:\", \"total processed\");\n    })\n  },[])\n\n  function handleChange(){\n    setChange(prevChange =>{\n      change + 1\n    });\n  }\n  // console.log('app data', data);\n  // console.log('app total', totalCalc);\n  // console.log('app change', change);\n  let loading = true;\n  if(loadingTotal === false && loadingData === false){\n    loading = false;\n  }\n\n  return(\n    <Router>\n      {loading ? <div>Loading.....</div> : <Navbar changeNav={change} dataNav={data} totalNav={totalCalc} />}\n\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/products\" render={(props)=>(<Products {...props} change={handleChange} />)} />\n      </Switch>\n    </Router>\n  )\n}\n\n// class App extends React.Component {\n//   state = {\n//     change: 0,\n//     data: [],\n//     total: '',\n//     loading: true\n//   };\n//\n//   handleChange = ( count ) => {\n//     this.setState({ loading: true })\n//     let change = this.state.change++;\n//     this.setState({ change: count })\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     fetch(url)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ data: data, loading: false }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//     fetch(urlTwo)\n//       .then(response => {\n//         if (response.ok) {\n//           return response.json();\n//         }\n//         throw new Error(\"Network response was not ok.\");\n//       })\n//       .then(data => this.setState({ total: data }))\n//       // .catch(() => this.props.history.push(\"/\"));\n//   };\n//\n//   varChange = ( count ) => {\n//     // this.setState({ change: count })\n//   }\n//   // async changeFunc(){\n//   //   const url = \"/carts/last\";\n//   //   const urlTwo = \"/carts/last/total\";\n//   //   const response = await fetch(url);\n//   //   const data = await response.json();\n//   //   this.setState({ data: data })\n//   //   const responseTwo = await fetch(urlTwo);\n//   //   const dataTwo = await responseTwo.json();\n//   //   this.setState({ total: dataTwo, loading: false })\n//   // }\n//\n//   // componentDidUpdate(prevProps){\n//   //   if(prevProps.change !== this.props.change){\n//   //     this.setState({ len: this.props.change});\n//   //     const url = \"/carts/last\";\n//   //     const urlTwo = \"/carts/last/total\";\n//   //     fetch(url)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ data: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //     fetch(urlTwo)\n//   //       .then(response => {\n//   //         if (response.ok) {\n//   //           return response.json();\n//   //         }\n//   //         throw new Error(\"Network response was not ok.\");\n//   //       })\n//   //       .then(data => this.setState({ total: data }))\n//   //       // .catch(() => this.props.history.push(\"/\"));\n//   //   }\n//   // }\n//\n//   async componentDidMount(){\n//     const url = \"/carts/last\";\n//     const urlTwo = \"/carts/last/total\";\n//     const response = await fetch(url);\n//     const data = await response.json();\n//     this.setState({ data: data })\n//     const responseTwo = await fetch(urlTwo);\n//     const dataTwo = await responseTwo.json();\n//     this.setState({ total: dataTwo, loading: false, change: data.length })\n//   };\n//\n//   render(){\n//     console.log(\"app data\",this.state.data);\n//     return(\n//       <Router>\n//         {this.state.loading ? (<div>Loading...</div>) : (<Navbar change={this.state.change} data={this.state.data} total={this.state.total} varChange={this.varChange}/>)}\n//\n//         <Switch>\n//           <Route path=\"/\" exact component={Home} />\n//           <Route path=\"/products\" render={(props)=>(<Products {...props} change={this.handleChange} />)} />\n//         </Switch>\n//       </Router>\n//     )\n//   }\n// }\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}